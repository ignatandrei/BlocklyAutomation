name: "Deploy release"
# env:
  # DOTNET_VERSION: '6.0.x'           # set this to the dot net version to use
  # AZURE_WEBAPP_NAME: 'AutoBlocklyApp'
on:
  push:    
    tags:
      - "vRelease*"
  
  workflow_dispatch:

jobs:
  buildHTML:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.13.0]

    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@master

    - name: Node ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        # cache: 'npm'
        # cache-dependency-path: |
        #   '**/package-lock.json'
        #   '**/package.json'
          

    # - name: put version
    #   run: |
    #     echo "${{github.ref_name}}" 
    #     echo "${{github.ref_name}}" > version.txt

    - name: npm install main blockly
      run: |
        cd src        
        cd react_new_app
        cd my-app
        npm i -g npm@8.19.3               
        npm i  

    - name: build docs main blockly
      run: |
        cd src        
        cd react_new_app
        cd docs
        npm i -g npm@8.19.3              
        npm i  
        npm run build      
        rm -rf src/react_new_app/docs/build/images/*      
        echo 'verify build docs main blockly'
        ls -l ${{github.workspace}}/src/react_new_app/docs/build      

    - name: build docs main blockly
      run: |
        cd src        
        cd Local
        cd docs
        npm i -g npm@8.19.3              
        npm i  
        npm run build            
        rm -rf src/Local/docs/build/images/*
        echo 'verify build docs main blockly'
        ls -l ${{github.workspace}}/src/Local/docs/build      

    - name: copy  docs to BlocklyMain
      run: |
        rm -rf src/react_new_app/my-app/public/help
        mkdir src/react_new_app/my-app/public/help
        cp -R src/react_new_app/docs/build/*  src/react_new_app/my-app/public/help/
          

    - name: build with root 
      run: |
        cd src        
        cd react_new_app
        cd my-app
        rm public/version.txt
        echo "${{github.ref_name}}" > public/version.txt
        npm run build


    # - name: verify exists app
    #   run: |
    #     echo 'main workspace'
    #     ls -l ${{github.workspace}}/src/react_new_app/my-app/build/      


    - name: Archive production artifacts main
      uses: actions/upload-artifact@v2
      with:
        name: releaseBlocklyAutomation
        path: 'src/react_new_app/my-app/build/*'
        retention-days: 3
        
    - name: Archive api docs
      uses: actions/upload-artifact@v2
      with:
        name: localAPIDocs
        path: 'src/Local/docs/build/*'
        retention-days: 3



    - name: Archive Release VisualAPI
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseBlocklyAutomation.zip'
        path: '${{github.workspace}}/src/react_new_app/my-app/build/*'
        directory: '${{github.workspace}}/src/react_new_app/my-app/build/'
        exclusions: '*.git* /*node_modules/* .editorconfig'       

    - name: Archive Release  LocalAPI Docs
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'releaseLocalAPIDocs.zip'
        path: '${{github.workspace}}/src/Local/docs/build/*'
        directory: '${{github.workspace}}/src/Local/docs/build/'
        exclusions: '*.git* /*node_modules/* .editorconfig'       

    - name: find release 
      run: |
        find ${{github.workspace}} -type f -name "*.zip"



    - name: ReleaseVisualAPI
      uses: softprops/action-gh-release@v1
      with:
        body: "Latest Release for Manual Install"
        generate_release_notes: true
        draft: false
        prerelease: false
        files:  |
            ${{github.workspace}}/src/Local/docs/build/releaseLocalAPIDocs.zip
            version.txt
        # tag: v${{ env.GITHUB_SHA }}
        #tag_name: v${{ env.GITHUB_SHA }}

    - name: ReleaseLocalAPI
      uses: softprops/action-gh-release@v1
      with:
        body: "Latest Release for Manual Install"
        generate_release_notes: true
        draft: false
        prerelease: false
        files:  |
            ${{github.workspace}}/src/react_new_app/my-app/build/releaseBlocklyAutomation.zip
            version.txt



    - name: delete older-releases@v0
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        #repo: <owner>/<repoName> # defaults to current repo
        keep_latest: 4
        #delete_tag_pattern: beta # defaults to ""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
